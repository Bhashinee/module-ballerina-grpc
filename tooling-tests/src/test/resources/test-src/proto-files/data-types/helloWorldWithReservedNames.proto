/*
 *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 */

syntax = "proto3";

service helloWorldWithReservedNames {
    rpc hello(HelloRequest) returns (HelloResponse);
    rpc bye(ByeRequest) returns (ByeResponse);
}

message HelloRequest {
    string control = 1;
    string data = 2;
//    string error = 3;
    string in = 4;
    string return = 5;
    string enum = 6;
    string import = 7;
    string as = 8;
    string public = 9;
    string private = 10;
    string external = 11;
    string final = 12;
    string service = 13;
    string resource = 14;
    string function = 15;
    string object = 16;
    string record = 17;
    string annotation = 18;
    string parameter = 19;
    string transformer = 20;
    string worker = 21;
    string listener = 22;
    string remote = 23;
    string xmlns = 24;
    string returns = 25;
    string version = 26;
    string channel = 27;
    string abstract = 28;
    string client = 29;
    string const = 30;
    string typeof = 31;
    string source = 32;
    string from = 33;
    string on = 34;
    string group = 35;
    string by = 36;
    string having = 37;
    string order = 38;
    string where = 39;
    string followed = 40;
    string for = 41;
    string window = 42;
    string every = 43;
    string within = 44;
    string snapshot = 45;
    string inner = 46;
    string outer = 47;
    string right = 48;
    string left = 49;
    string full = 50;
    string unidirectional = 51;
    string forever = 52;
    string limit = 53;
    string ascending = 54;
    string descending = 55;
    string int = 56;
    string byte = 57;
    string float = 58;
    string decimal = 59;
    string boolean = 60;
    string string = 61;
    string map = 62;
//    string json = 63;
    string xml = 64;
    string table = 65;
    string stream = 66;
    string any = 67;
    string typedesc = 68;
    string type = 69;
    string future = 70;
//    string anydata = 71;
    string handle = 72;
    string var = 73;
    string new = 74;
    string init = 75;
    string if = 76;
    string match = 77;
    string else = 78;
    string foreach = 79;
    string while = 80;
    string continue = 81;
    string break = 82;
    string fork = 83;
    string join = 84;
    string some = 85;
    string all = 86;
    string try = 87;
    string catch = 88;
    string finally = 89;
    string throw = 90;
    string panic = 91;
    string trap = 92;
    string transaction = 93;
    string abort = 94;
    string retry = 95;
    string onretry = 96;
    string retries = 97;
    string committed = 98;
    string aborted = 99;
    string with = 100;
    string lock = 101;
    string untaint = 102;
    string start = 103;
    string but = 104;
    string check = 105;
    string checkpanic = 106;
    string primarykey = 107;
    string is = 108;
    string flush = 109;
    string wait = 110;
    string default = 111;
    string unknown = 112;
    Types types = 113;
}
message HelloResponse {
    string message = 1;
}
message ByeRequest {
    string greet = 1;
}
message ByeResponse {
    string say = 1;
}
enum Types {
    unknown = 0;
    control = 1;
    data = 2;
//    error = 3;
    in = 4;
    return = 5;
    enum = 6;
    import = 7;
    as = 8;
    public = 9;
    private = 10;
    external = 11;
    final = 12;
    service = 13;
    resource = 14;
    function = 15;
    object = 16;
    record = 17;
    annotation = 18;
    parameter = 19;
    transformer = 20;
    worker = 21;
    listener = 22;
    remote = 23;
    xmlns = 24;
    returns = 25;
    version = 26;
    channel = 27;
    abstract = 28;
    client = 29;
    const = 30;
    typeof = 31;
    source = 32;
    from = 33;
    on = 34;
    group = 35;
    by = 36;
    having = 37;
    order = 38;
    where = 39;
    followed = 40;
    for = 41;
    window = 42;
    every = 43;
    within = 44;
    snapshot = 45;
    inner = 46;
    outer = 47;
    right = 48;
    left = 49;
    full = 50;
    unidirectional = 51;
    forever = 52;
    limit = 53;
    ascending = 54;
    descending = 55;
    int = 56;
    byte = 57;
    float = 58;
    decimal = 59;
    boolean = 60;
    string = 61;
    map = 62;
//    json = 63;
    xml = 64;
    table = 65;
    stream = 66;
    any = 67;
    typedesc = 68;
    type = 69;
    future = 70;
//    anydata = 71;
    handle = 72;
    var = 73;
    new = 74;
    init = 75;
    if = 76;
    match = 77;
    else = 78;
    foreach = 79;
    while = 80;
    continue = 81;
    break = 82;
    fork = 83;
    join = 84;
    some = 85;
    all = 86;
    try = 87;
    catch = 88;
    finally = 89;
    throw = 90;
    panic = 91;
    trap = 92;
    transaction = 93;
    abort = 94;
    retry = 95;
    onretry = 96;
    retries = 97;
    committed = 98;
    aborted = 99;
    with = 100;
    lock = 101;
    untaint = 102;
    start = 103;
    but = 104;
    check = 105;
    checkpanic = 106;
    primarykey = 107;
    is = 108;
    flush = 109;
    wait = 110;
    default = 111;
}

message FieldRules {
    oneof type {
        EnumRules enum = 16;
    }
}

message EnumRules {
    int32 const = 1;
    bool defined_only = 2;
    repeated int32 in = 3;
    repeated int32 not_in = 4;
}
